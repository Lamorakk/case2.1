import logging
import asyncio
from aiogram import Bot, Dispatcher, types, Router, F
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.utils.keyboard import ReplyKeyboardBuilder

API_TOKEN = "7333238266:AAEz4RVqD3JKgdlpAzCpapXqwOdsECjz-I0"
ADMIN_CHAT_ID = '-1002181544885'

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(storage=storage)
router = Router()
dp.include_router(router)

class Survey(StatesGroup):
    start = State()
    age = State()
    city = State()
    schedule = State()
    name = State()
    contact_info = State()

@router.message(CommandStart())
async def send_welcome(message: types.Message, state: FSMContext):
    user_data = {
        "user_id": message.from_user.id,
        "username": message.from_user.username
    }
    await state.update_data(**user_data)
    await message.answer(
        "–í–∞—Å –≤—ñ—Ç–∞—î ¬´Luxury studio¬ª\n"
        "–ú–∏ —î –æ–¥–Ω–∏–º–∏ –∑ –ª—ñ–¥–µ—Ä—ñ–≤ —Ä–∏–Ω–∫—É –≤ —Ü—ñ–π –Ω—ñ—à—ñ, —Ç–æ–º—É —à—É–∫–∞—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ç–∞ –∞–º–±—ñ—Ç–Ω–∏—Ö –ª—é–¥–µ–π –≤ –Ω–∞—à—ñ —Ä—è–¥–∏üòâ\n")
    await message.answer(
        "–Ø –Ñ–≤–∞, –±–æ—Ç-–ø–æ–º—ñ—á–Ω–∏–∫ –º–æ–¥–µ–ª—å–Ω–æ—ó –∞–≥–µ–Ω—Ü—ñ—ó ¬´Luxury studio¬ª. –Ø –¥–æ–ø–æ–º–æ–∂—É —Ç–æ–±—ñ –æ—Ñ–æ—Ä–º–∏—Ç–∏ –∞–Ω–∫–µ—Ç—É –Ω–∞ –ø—Ä–æ—Ñ–µ—Å—ñ—é –≤–µ–±-–º–æ–¥–µ–ª—å.\n\n"
        "–ü—Ä–æ—Ñ–µ—Å—ñ—è, –¥–µ –∞–±—Å–æ–ª—é—Ç–Ω–æ –∫–æ–∂–Ω–∞ –¥—ñ–≤—á–∏–Ω–∞ –∑–º–æ–∂–µ –∑–¥—ñ–π—Å–Ω–∏—Ç–∏ —Å–≤–æ—é –º—Ä—ñ—é —ñ –≤–∏–π—Ç–∏ –Ω–∞ –¥–æ—Ö—ñ–¥ –≤—ñ–¥ 1500$ –Ω–∞–≤—ñ—Ç—å –±–µ–∑ –¥–æ—Å–≤—ñ–¥—É.\n"
        "–¢–∞ –≤—ñ–¥ 3000$ –¥–ª—è –¥—ñ–≤—á–∞—Ç –∑ –¥–æ—Å–≤—ñ–¥–æ–º. –î–∞–≤–∞–π –ø–æ–∑–Ω–∞–π–æ–º–∏–º–æ—Å—å –±–ª–∏–∂—á–µ.\n\n"
        "–î–∞–π –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ 5 –ø–∏—Ç–∞–Ω—å (—Ü–µ –∑–∞–π–º–µ 2 —Ö–≤–∏–ª–∏–Ω–∏ —Ç–≤–æ–≥–æ —á–∞—Å—É), —ñ –º–∏ –ø—Ä–æ–¥–æ–≤–∂–∏–º–æ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è –¥–∞–ª—ñ. –¢–∏ –∑–≥–æ–¥–Ω–∞?\n",
        reply_markup=ReplyKeyboardBuilder().button(text="–¢–∞–∫").as_markup(resize_keyboard=True)
    )
    await state.set_state(Survey.start)

@router.message(Survey.start, F.text == "–¢–∞–∫")
async def ask_age(message: types.Message, state: FSMContext):
    await state.set_state(Survey.age)
    await message.answer("–°–∫—ñ–ª—å–∫–∏ –≤–∞–º —Ä–æ–∫—ñ–≤? (–≤–∫–∞–∂—ñ—Ç—å —Ü–∏—Ñ—Ä–∞–º–∏)", reply_markup=types.ReplyKeyboardRemove())

@router.message(Survey.age)
async def ask_city(message: types.Message, state: FSMContext):
    await state.update_data(age=message.text)
    await state.set_state(Survey.city)
    await message.answer("–ó —è–∫–æ–≥–æ –≤–∏ –º—ñ—Å—Ç–∞?")

@router.message(Survey.city)
async def ask_schedule(message: types.Message, state: FSMContext):
    await state.update_data(city=message.text)
    await state.set_state(Survey.schedule)
    await message.answer("–Ø–∫–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç –≥—Ä–∞—Ñ—ñ–∫—É –≤–∞–º –±—ñ–ª—å—à –∫–æ–º—Ñ–æ—Ä—Ç–Ω–∏–π?",
                         reply_markup=ReplyKeyboardBuilder()
                         .button(text="–î–µ–Ω–Ω–∞ –∑–º—ñ–Ω–∞")
                         .button(text="–ù—ñ—á–Ω–∞ –∑–º—ñ–Ω–∞")
                         .as_markup(resize_keyboard=True))

@router.message(Survey.schedule)
async def ask_name(message: types.Message, state: FSMContext):
    await state.update_data(schedule=message.text)
    await state.set_state(Survey.name)
    await message.answer("–Ø–∫ –≤–∞—Å –∑–≤–∞—Ç–∏?", reply_markup=types.ReplyKeyboardRemove())

@router.message(Survey.name)
async def ask_contact_info(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(Survey.contact_info)
    await message.answer("–í–∫–∞–∂—ñ—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É, –∞–±–æ –Ω—ñ–∫ —É –¢–µ–ª–µ–≥—Ä–∞–º —Ç–∞ –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –í–∞–ª–µ–Ω—Ç–∏–Ω–∞ –∑–≤‚Äô—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏")

@router.message(Survey.contact_info)
async def complete_survey(message: types.Message, state: FSMContext):
    await state.update_data(contact_info=message.text)

    await message.answer("–î—è–∫—É—î–º–æ. –ù–∞ —Ü—å–æ–º—É –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –∞–Ω–∫–µ—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.\n\n"
                         "–ù–∞—Å—Ç—É–ø–Ω–∏–π –∫—Ä–æ–∫ ‚Äì –∫–æ—Ä–æ—Ç–∫–∞ —Å–ø—ñ–≤–±–µ—Å—ñ–¥–∞. –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å ‚Äì –¥–æ 10 —Ö–≤–∏–ª–∏–Ω.\n"
                         "–í–∞–º —Ä–æ–∑–∫–∞–∂—É—Ç—å –æ—Å–Ω–æ–≤–Ω—ñ –∑–∞–¥–∞—á—ñ —Ç–∞ –ø–æ—è—Å–Ω—è—Ç—å —è–∫ —Ñ–æ—Ä–º—É—î—Ç—å—Å—è –∑–∞—Ä–æ–±—ñ—Ç–Ω–∞ –ø–ª–∞—Ç–∞.\n\n"
                         "–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –∑–≤'—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º, –∑–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ –≤–∫–∞–∑–∞–Ω–∏–º–∏ –≤–∞–º–∏ —É –∑–∞—è–≤—Ü—ñ.",
                         reply_markup=types.ReplyKeyboardRemove())

    data = await state.get_data()
    response_message = (
        f"–ù–æ–≤–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è:\n\n"
        f"User ID: {data.get('user_id')}\n"
        f"Username: @{data.get('username')}\n"
        f"\n"
        f"Age: {data.get('age')}\n"
        f"City: {data.get('city')}\n"
        f"Schedule: {data.get('schedule')}\n"
        f"Name: {data.get('name')}\n"
        f"Contact Info: {data.get('contact_info')}\n"
    )

    await bot.send_message(chat_id=ADMIN_CHAT_ID, text=response_message)
    await state.clear()

if __name__ == "__main__":
    async def main():
        await dp.start_polling(bot, skip_updates=True)

    async def shutdown():
        await bot.session.close()

    try:
        asyncio.run(main())
    except (KeyboardInterrupt, SystemExit):
        asyncio.run(shutdown())
